Archive member included because of file (symbol)

e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./UART_program.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_program.o
LOAD ./SPI_program.o
LOAD ./UART_program.o
LOAD ./main.o
LOAD e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x10c4
 *(.vectors)
 .vectors       0x00000000       0x54 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./DIO_program.o
 .text          0x0000007c        0x0 ./SPI_program.o
 .text          0x0000007c        0x0 ./UART_program.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_voidInit
                0x0000007c       0x46 ./DIO_program.o
                0x0000007c                DIO_voidInit
 .text.DIO_u8SetPinDirection
                0x000000c2      0x256 ./DIO_program.o
                0x000000c2                DIO_u8SetPinDirection
 .text.DIO_u8SetPinValue
                0x00000318      0x254 ./DIO_program.o
                0x00000318                DIO_u8SetPinValue
 .text.DIO_u8GetPinValue
                0x0000056c      0x180 ./DIO_program.o
                0x0000056c                DIO_u8GetPinValue
 .text.DIO_u8SetPortDirection
                0x000006ec      0x144 ./DIO_program.o
                0x000006ec                DIO_u8SetPortDirection
 .text.DIO_u8SetPortValue
                0x00000830       0x90 ./DIO_program.o
                0x00000830                DIO_u8SetPortValue
 .text.DIO_u8GetPortValue
                0x000008c0       0xb0 ./DIO_program.o
                0x000008c0                DIO_u8GetPortValue
 .text.SPI_voidInit
                0x00000970       0x54 ./SPI_program.o
                0x00000970                SPI_voidInit
 .text.SPI_u8TransReceive
                0x000009c4       0x4e ./SPI_program.o
                0x000009c4                SPI_u8TransReceive
 .text.SPI_voidSlaveSendByte
                0x00000a12       0x1c ./SPI_program.o
                0x00000a12                SPI_voidSlaveSendByte
 .text.SPI_u8ReceiveByte
                0x00000a2e       0x42 ./SPI_program.o
                0x00000a2e                SPI_u8ReceiveByte
 .text.UART_voidInit
                0x00000a70       0xac ./UART_program.o
                0x00000a70                UART_voidInit
 .text.UART_voidSendByte
                0x00000b1c       0x34 ./UART_program.o
                0x00000b1c                UART_voidSendByte
 .text.UART_u8ReceiveByte
                0x00000b50       0x42 ./UART_program.o
                0x00000b50                UART_u8ReceiveByte
 .text.UART_u8SendStringSynch
                0x00000b92      0x152 ./UART_program.o
                0x00000b92                UART_u8SendStringSynch
 .text.UART_u8ReceiveStringSynch
                0x00000ce4       0xe4 ./UART_program.o
                0x00000ce4                UART_u8ReceiveStringSynch
 .text.UART_u8SendStringAsynch
                0x00000dc8       0x7c ./UART_program.o
                0x00000dc8                UART_u8SendStringAsynch
 .text.__vector_14
                0x00000e44       0xc2 ./UART_program.o
                0x00000e44                __vector_14
 .text.UART_u8ReceiveStringAsynch
                0x00000f06       0x8c ./UART_program.o
                0x00000f06                UART_u8ReceiveStringAsynch
 .text.__vector_13
                0x00000f92       0xd4 ./UART_program.o
                0x00000f92                __vector_13
 .text.main     0x00001066       0x5a ./main.o
                0x00001066                main
 .text.libgcc   0x000010c0        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000010c0        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000010c0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000010c0        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000010c0                exit
                0x000010c0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000010c0        0x4 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000010c4                _etext = .

.data           0x00800060        0x0 load address 0x000010c4
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_program.o
 .data          0x00800060        0x0 ./SPI_program.o
 .data          0x00800060        0x0 ./UART_program.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0xe
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./DIO_program.o
 .bss           0x00800060        0x0 ./SPI_program.o
 .bss           0x00800060        0x0 ./UART_program.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 e:/self_learning/embedded imt/01- embedded systems avr tools/01- imt sdk/imt_sdk_win_64/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.UART_pfTXC
                0x00800060        0x2 ./UART_program.o
 .bss.UART_pu8StringToSend
                0x00800062        0x2 ./UART_program.o
 .bss.UART_u8CurrentIndex
                0x00800064        0x1 ./UART_program.o
 .bss.UART_u8BusyFlagTx
                0x00800065        0x1 ./UART_program.o
 .bss.UART_pu8ReceivedString
                0x00800066        0x2 ./UART_program.o
 .bss.UART_pfRXC
                0x00800068        0x2 ./UART_program.o
 .bss.UART_u8ReceiveCurrentIndex
                0x0080006a        0x1 ./UART_program.o
 .bss.UART_u8BusyFlagRx
                0x0080006b        0x1 ./UART_program.o
 .bss.UART_u8ReceiveMessageSize
                0x0080006c        0x1 ./UART_program.o
 .bss.Flag.1314
                0x0080006d        0x1 ./main.o
 *(COMMON)
                0x0080006e                PROVIDE (__bss_end, .)
                0x000010c4                __data_load_start = LOADADDR (.data)
                0x000010c4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006e        0x0
                0x0080006e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006e                PROVIDE (__noinit_end, .)
                0x0080006e                _end = .
                0x0080006e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x17e8
 *(.stab)
 .stab          0x00000000      0x8f4 ./DIO_program.o
 .stab          0x000008f4      0x2d0 ./SPI_program.o
                                0x360 (size before relaxing)
 .stab          0x00000bc4      0x8b8 ./UART_program.o
                                0x948 (size before relaxing)
 .stab          0x0000147c      0x36c ./main.o
                                0x3fc (size before relaxing)

.stabstr        0x00000000      0xda1
 *(.stabstr)
 .stabstr       0x00000000      0xda1 ./DIO_program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SPI_Slave_Test.elf elf32-avr)
LOAD linker stubs
